// Assign STATIC_AREA_ADDRESS to register "r0"
 	 loadI 1024 	=> r0 
	// Compute address of variable "a" at offset 0 in register 2
 	 loadI 0 	=> r1 
 	 add r0, r1 	=> r2 
 	 loadI 1 	=> r3 
 	 store r3 	=> r2 
	// Compute address of variable "b" at offset 4 in register 5
 	 loadI 4 	=> r4 
 	 add r0, r4 	=> r5 
 	 loadI 10 	=> r6 
 	 store r6 	=> r5 
	// Initialize ind. variable "i" at offset 8 with lower bound value 1
 	 loadI 8 	=> r7 
 	 add r0, r7 	=> r8 
 	 loadI 1 	=> r11 
 	 loadI 10 	=> r12 
 	 store r11 	=> r8 
	// Generate control code for "FOR" 
L0:	 loadAI r0, 8 	=> r9 
 	 cmp_LE r9, r12 	=> r10
 	 cbr r10 	=> L1, L2
L1:	 nop 
	// Compute address of variable "a" at offset 0 in register 14
 	 loadI 0 	=> r13 
 	 add r0, r13 	=> r14 
	// Load RHS value of variable "a" at offset 0
 	 loadAI r0, 0 	=> r15 
	// Load RHS value of variable "b" at offset 4
 	 loadAI r0, 4 	=> r16 
 	 add r15, r16 	=> r17 
 	 store r17 	=> r14 
	// Compute address of variable "b" at offset 4 in register 19
 	 loadI 4 	=> r18 
 	 add r0, r18 	=> r19 
	// Load RHS value of variable "b" at offset 4
 	 loadAI r0, 4 	=> r20 
 	 loadI 1 	=> r21 
 	 add r20, r21 	=> r22 
 	 store r22 	=> r19 
 	 loadAI r0, 8 	=> r23 
 	 addI r23, 1 	=> r24 
 	 storeAI r24 	=> r0, 8 
 	 br L0
L2:	 nop 
	// Load RHS value of variable "a" at offset 0
 	 loadAI r0, 0 	=> r25 
	// Code for "PRINT" from offset -4
 	 storeAI r25 	=> r0, -4 
 	 outputAI r0, -4
